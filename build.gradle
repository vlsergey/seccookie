plugins {
	id 'java-library'
	id 'maven-publish'
	id 'net.researchgate.release' version '2.8.1'
}

group 'io.github.vlsergey'

ext {
	lombokVersion = '1.18.22'
}

compileJava {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	if (JavaVersion.current().isJava11Compatible()) {
		options.release = 8
	}

	options.compilerArgs << '-parameters'
	options.debugOptions.debugLevel = "source,lines,vars"
	options.encoding = 'UTF-8'
}

compileTestJava {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	if (JavaVersion.current().isJava11Compatible()) {
		options.release = 8
	}

	options.compilerArgs << '-parameters'
	options.debugOptions.debugLevel = "source,lines,vars"
	options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
	compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
	compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

	testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
	testAnnotationProcessor group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

	testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	testImplementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	testImplementation(platform('org.junit:junit-bom:5.7.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testImplementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

task regenerateReadme {
	doLast {
		def releaseVersion = project.property('release.releaseVersion');
		copy {
			from file( 'README.template.md')
			rename 'README\\.template\\.md', 'README.md'
			into project.projectDir
			expand([ "version": releaseVersion ])
		}

		exec {
			workingDir project.projectDir
			commandLine 'git'
			args 'add', 'README.md'
		}

		exec {
			workingDir project.projectDir
			commandLine 'git'
			args 'commit', '-m', 'Update version in README.md to ' + releaseVersion
		}
	}
}
beforeReleaseBuild.dependsOn regenerateReadme

release {
	failOnCommitNeeded = true
	failOnSnapshotDependencies = true
	failOnUnversionedFiles = true
	failOnUpdateNeeded = true
	pushReleaseVersionBranch = false
}

publishing {
	publications {
		myLibrary(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/vlsergey/spring-data-entity-security"
			credentials {
				username = System.getenv("GITHUB_ACTOR")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}
}
